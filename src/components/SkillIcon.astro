---
export interface Props {
  text: string,
  popOverId?: string,
  popOverTitle?: string,
  popOverBody?: string,
};

const {text, popOverTitle = "", popOverBody = ""} = Astro.props as Props;
let {popOverId = ""} = Astro.props as Props;

const subtitleTexts = text.split(" ");

if(popOverId === "") {
  popOverId = subtitleTexts.join("-").toLowerCase();
}
---
<div>
  <!-- Skill Icon -->
  {popOverTitle !== "" ? (
  <button data-popover-target={`popover-${popOverId}`} data-popover-trigger="hover" class="select-none bg-gray-300 text-gray-900 text-sm font-medium hover:invert mr-2 my-1 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-200 border-[1px] border-gray-400 dark:border-gray-600 transition-all">
    {text}
  </button>) : (
    <button class="select-none bg-gray-300 text-gray-900 text-sm font-medium hover:invert mr-2 my-1 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-200 border-[1px] border-gray-400 dark:border-gray-600 transition-all">
      {text}
  </button>)}
  
  <!-- Skill Popover -->
  {popOverTitle !== "" && (
  <div data-popover id={`popover-${popOverId}`} role="tooltip" class="inline-block absolute invisible z-10 w-64 text-sm bg-white rounded-lg border border-gray-500 shadow-sm opacity-0 transition-opacity duration-300 dark:border-gray-400 dark:bg-gray-800">
    <div class="py-2 px-3 bg-gray-200 rounded-t-lg border-b border-gray-400 dark:border-gray-500 dark:bg-gray-700">
        <h3 class="font-semibold">{popOverTitle}</h3>
    </div>
    {popOverBody !== "" && <div class="py-2 px-3">
        <p>{popOverBody}</p>
    </div>}
  </div>)}

</div>
